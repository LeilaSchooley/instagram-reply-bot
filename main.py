import time
import openai
import configparser
from playwright.sync_api import sync_playwright

# Load configuration from config.ini
config = configparser.ConfigParser()
config.read('config.ini')

# Set up OpenAI API Key from config file
openai.api_key = config['openai']['api_key']

# Instagram login credentials from config file
INSTAGRAM_USERNAME = config['instagram']['username']
INSTAGRAM_PASSWORD = config['instagram']['password']


# Function to get the response from OpenAI (ChatGPT)
def generate_response(message):
    response = openai.Completion.create(
        engine="text-davinci-003",  # You can change the model as needed
        prompt=f"Reply to this Instagram message: {message}",
        max_tokens=50
    )
    return response.choices[0].text.strip()


# Function to simulate typing
def type_like_human(page, message, element_selector):
    for char in message:
        page.locator(element_selector).type(char)
        time.sleep(0.05)  # Simulate typing speed


def check_inbox_and_reply(playwright):
    browser = playwright.chromium.launch(headless=False)  # Set to True if you want headless
    page = browser.new_page()

    # Navigate to Instagram and login
    page.goto('https://www.instagram.com/')
    time.sleep(2)

    # Log in
    page.fill('input[name="username"]', INSTAGRAM_USERNAME)
    page.fill('input[name="password"]', INSTAGRAM_PASSWORD)
    page.click('button[type="submit"]')
    time.sleep(5)  # Wait for the login to complete

    # Go to Instagram inbox
    page.goto('https://www.instagram.com/direct/inbox/')
    time.sleep(5)

    # Check for messages that are "5m" old
    while True:
        # Find messages that are 5 minutes old
        messages = page.locator('span:has-text("5m")')  # Selector to find messages that are 5 minutes old
        if messages.count() > 0:
            messages.first.click()
            time.sleep(2)  # Wait for message to open

            # Read the last message text
            last_message = page.locator('div[role="textbox"]').last.text_content()
            print(f"Last message received: {last_message}")

            # Send the message to OpenAI to generate a response
            reply = generate_response(last_message)
            print(f"Reply generated by OpenAI: {reply}")

            # Type the reply like a human
            message_input_selector = 'textarea[placeholder="Message..."]'  # Adjust this if the selector changes
            type_like_human(page, reply, message_input_selector)

            # Send the message
            page.locator('button[type="submit"]').click()

            # Break the loop after responding
            break

        # Wait for some time before checking again
        time.sleep(60)  # Check every minute

    # Close the browser
    browser.close()


# Run the script using Playwright
with sync_playwright() as playwright:
    check_inbox_and_reply(playwright)
