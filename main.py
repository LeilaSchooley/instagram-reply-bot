import time
import traceback

import openai
import configparser
from playwright.sync_api import sync_playwright

from dolphin import launch_browser, launch_browser_playwright_dolphin


def type_like_human(page, message, element_selector):
    for char in message:
        page.locator(element_selector).type(char)
        time.sleep(0.05)  # Simulate typing speed


def wait_for_page_load(page, timeout=60000):
    try:
        page.wait_for_load_state("load", timeout=timeout)
        print("Page loaded successfully.")
    except Exception as e:
        pass


class InstagramBot:
    def __init__(self, config_path='config.ini'):
        # Load configuration from config.ini
        self.config = configparser.ConfigParser()
        self.config.read(config_path)

        # OpenAI setup
        openai.api_key = self.config.get("DEFAULT", "OPENAI")

        # Instagram credentials
        self.instagram_username = self.config.get("DEFAULT", "INSTAGRAM_USERNAME")
        self.instagram_password = self.config.get("DEFAULT", "INSTAGRAM_PASS")

    # Function to get the response from OpenAI (ChatGPT)
    def generate_response(self, message):
        response = openai.Completion.create(
            engine="text-davinci-003",  # You can change the model as needed
            prompt=f"Reply to this Instagram message: {message}",
            max_tokens=50
        )
        return response.choices[0].text.strip()

    # Function to simulate typing


    def check_inbox_and_reply(self):
        endpoint, port = launch_browser("456052958")
        page = launch_browser_playwright_dolphin(endpoint, port)
        try:

            # Go to Instagram inbox
            page.goto('https://www.instagram.com/direct/inbox/')
            time.sleep(5)

            # Check for messages that are "5m" old
            while True:
                # Find messages that are 5 minutes old
                messages = page.locator('span:has-text("5m")')  # Selector to find messages that are 5 minutes old
                if messages.count() > 0:
                    messages.first.click()
                    time.sleep(2)  # Wait for message to open

                    # Read the last message text
                    last_message = page.locator('div[role="textbox"]').last.text_content()
                    print(f"Last message received: {last_message}")

                    # Send the message to OpenAI to generate a response
                    reply = self.generate_response(last_message)
                    print(f"Reply generated by OpenAI: {reply}")

                    # Type the reply like a human
                    message_input_selector = 'textarea[placeholder="Message..."]'  # Adjust this if the selector changes
                    type_like_human(page, reply, message_input_selector)

                    # Send the message
                    page.locator('button[type="submit"]').click()

                    # Break the loop after responding
                    break

                # Wait for some time before checking again
                time.sleep(60)  # Check every minute

        except:
            traceback.print_exc()
            page.pause()
# Entry point to run the bot
if __name__ == "__main__":
    bot = InstagramBot()
    bot.check_inbox_and_reply()
